<?php

/**
 * @file
 * Module file of the translation management test module.
 */

/**
 * Implements hook_tmgmt_translator_plugin_info().
 */
function tmgmt_supertext_tmgmt_translator_plugin_info() {
  return array(
    'supertext' => array(
      'label' => t('Supertext translator'),
      'description' => t('A Supertext translator service.'),
      'plugin controller class' => 'TMGMTSupertextPluginController',
    ),
  );
}


/**
 * Implements hook_menu().
 */
function tmgmt_supertext_menu(){
  $items = array();

  $items['tmgmt_supertext_callback'] = array(
    'type' => MENU_CALLBACK,
    'title' => 'supertext callback',
    'description' => '',
    'page callback' => 'tmgmt_supertext_callback',
    'access callback' => 'tmgmt_supertext_access_check'
  );
  return $items;
}

/**
 * Process response from supertext.
 *
 * The payload, once decoded, looks like this:
 *
stdClass Object
(
    [AccountId] => 11798
    [CallbackUrl] =>
    [CommunicationLang] =>
    [ContentType] =>
    [Currency] => CHF
    [Deadline] => 2012-01-23T13:52:12.0000000
    [DeliveryId] => 1
    [Groups] => Array
        (
            [0] => stdClass Object
                (
                    [Context] =>
                    [GroupId] =>
                    [Items] => Array
                        (
                            [0] => stdClass Object
                                (
                                    [Comment] =>
                                    [Content] => Tags
                                    [Context] =>
                                    [Id] => taxonomy:vocabulary:1:name
                                )

                            [1] => stdClass Object
                                (
                                    [Comment] =>
                                    [Content] => Use tags to group articles on similar topics into categories.
                                    [Context] =>
                                    [Id] => taxonomy:vocabulary:1:description
                                )

                        )

                )

        )

    [Id] => 14292
    [OrderDate] => 2012-01-22T02:52:12.0000000
    [OrderTitle] =>
    [OrderType] => Adaption
    [OrderTypeId] => 7
    [Password] =>
    [Price] => -1
    [ReferenceData] => 51:6905f8ae8dd7c961e3dc00c639e9b6b5
    [Referrer] =>
    [Service] => Translation
    [SourceLang] => en
    [Status] => Eingegangen
    [TargetLang] => pt-BR
    [WordCount] => 10
)

Then, how to convert a response to our format, example, not working, code:
if (isset($response['Options'])) {
        foreach $response['DeliveryOptions'] as $option_key => $option_item {
          foreach $option_item['DeliveryOptions'] as $delivery_key => $delivery_item {
            $options[$option_item->OrderTypeId . '-' . $delivery_item->DeliveryId] = $option_item->Name . ': ' . $delivery_item->DeliveryDate . ', Price' . $delivery_item->Price;
          }
        }
      }
 */
function tmgmt_supertext_callback() {
  $input = file_get_contents('php://input');
  $data = json_decode($input);
  watchdog('supertext', 'DATA.  <br /><pre>!post</pre>', array('!post' => print_r($data, TRUE)));

  $keys = explode(':', $data->ReferenceData);
  $tjid = array_shift($keys);

  $job = tmgmt_job_load($tjid);
  watchdog('supertext', 'JOB.  <br /><pre>!post</pre>', array('!post' => print_r($job, TRUE)));

  $translation = array();
  foreach ($data->Groups as $object_id => $object) {
    // Object <=> JobItem
    foreach ($object->Items as $string_object) {
      $translation[$object->GroupId][$string_object->Id] = array(
        '#text' => $string_object->Content,
      );
    }
  }
  watchdog('supertext', 'TRANSLATED DATA.  <br /><pre>!post</pre>', array('!post' => print_r($translation, TRUE)));

  $job->addTranslatedData($translation);
  $job->needsReview('Supertext sent us their translation');
}

/**
 * tmgmt_supertext_callback access check.
 */
function tmgmt_supertext_access_check() {
  $input = file_get_contents('php://input');
  //watchdog('supertext', 'INPUT.  <br /><pre>!post</pre>', array('!post' => print_r($input, TRUE)));
  try {
    $job = json_decode($input);
    //watchdog('supertext', 'Job  <br /><pre>!post</pre>', array('!post' => print_r($job, TRUE)));
    if (isset($job->ReferenceData)) {
      // Check valid hash
      $ref = explode(':', $job->ReferenceData);
      if (count($ref)==2 && $ref[1] == tmgmt_supertext_hash($ref[0])) {
        $job->TMGMT_id = $ref[0];
        return TRUE;
      }
    }
  } catch(Exception $e) {
    // Debug it for now, why not...
    watchdog('supertext', print_r($_REQUEST, TRUE));
  }
  return FALSE;
}

/**
 * Create secret hash for supertext reference.
 */
function tmgmt_supertext_hash($id) {
  return md5(drupal_get_hash_salt() . $id);
}

